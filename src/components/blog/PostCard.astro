---
import { formatDate } from '@/utils/formatDate';
import { getReadingTime, formatReadingTime } from '@/utils/getReadingTime';
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, date, tags, author, coverImage } = post.data;
const { slug } = post;

// 計算閱讀時間 - 這裡我們暫時使用描述文字長度作為估算
const readingTime = getReadingTime(post.body || description);
---

<article class='bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow'>
  {
    coverImage && (
      <div class='aspect-video overflow-hidden'>
        <img
          src={coverImage}
          alt={title}
          class='w-full h-full object-cover hover:scale-105 transition-transform duration-300'
        />
      </div>
    )
  }

  <div class='p-6'>
    <!-- Tags -->
    {
      tags && tags.length > 0 && (
        <div class='flex flex-wrap gap-2 mb-3'>
          {tags.slice(0, 3).map(tag => (
            <a
              href={`/blog/tag/${tag}`}
              class='px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full hover:bg-blue-200 transition-colors'>
              #{tag}
            </a>
          ))}
        </div>
      )
    }

    <!-- Title & Description -->
    <h2 class='text-xl font-semibold text-gray-900 mb-2 line-clamp-2'>
      <a
        href={`/blog/${slug}`}
        class='hover:text-blue-600 transition-colors'
      >
        {title}
      </a>
    </h2>

    <p class='text-gray-600 text-sm mb-4 line-clamp-3'>
      {description}
    </p>

    <!-- Meta Info -->
    <div class='flex items-center justify-between text-xs text-gray-500'>
      <div class='flex items-center space-x-2'>
        <span>{author}</span>
        <span>•</span>
        <time datetime={date.toISOString()}>
          {formatDate(date)}
        </time>
      </div>
      <span>{formatReadingTime(readingTime)}</span>
    </div>
  </div>
</article>
